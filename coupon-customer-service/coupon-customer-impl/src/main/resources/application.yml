server:
  port: 12582
  error:
    include-message: always

spring:
  application:
    name: coupon-customer-service
#  # 已改为从Nacos配置中心获取
#  datasource:
#    username: penistrong
#    password: chenliwei
#    url: jdbc:mysql://127.0.0.1:3306/coupon_db?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
#    type: com.zaxxer.hikari.HikariDataSource
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    hikari:
#      pool-name: CouponHikari
#      connection-timeout: 5000
#      idle-timeout: 30000
#      maximum-pool-size: 10
#      minimum-idle: 5
#      max-lifetime: 60000
#      auto-commit: true
  jpa:
    show-sql: true
    hibernate:
      # 在生产环境全部为none，防止ddl结构被自动执行
      ddl-auto: none
    properties:
      hibernate.show_sql: true
      hibernate.format_sql: true
    open-in-view: false
  # Spring-Cloud配置
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        service: coupon-customer-service
        # Nacos客户端向服务端发送心跳的间隔，单位ms
        heart-beat-interval: 5000
        # Nacos服务端将未接收到心跳的客户端设置为 不健康 状态的时间间隔，单位ms
        heart-beat-timeout: 15000
        # 元数据部分，而可以添加自定义属性
        metadata:
          penistrong-custom-metadata: I-Penistrong
        # 客户端在启动是否读取本地配置项以获取服务列表，若为true会在本地维护一个配置项文件下次宕机重启动后会读取文件里的服务列表
        naming-load-cache-at-start: false
        # 集群名
        cluster-name: Cluster-Coupon
        # 命名空间ID, Nacos通过不同命名空间区分不同数据环境，进行数据隔离，服务消费时只能消费到其对应命名空间下的服务
        # 在Nacos-server中创建namespace后，将namespace的**ID**设置为该属性值
        namespace: coupon-center-dev
        # 服务集群，如果两个服务存在上下游调用关系，它们必须在同一group下才能发起请求
        group: main
        # 向Nacos注册中心注册服务，如果只消费其他服务而不提供服务，可以设置为false以减小开销
        register-enabled: true
        # 开启监听服务端信息变化
        watch:
          enabled: true
        watch-delay: 30000

logging:
  level:
    com.broadview.coupon: debug
    # 配置OpenFeign日志信息打印
    org.penistrong.coupon.customer.feign.TemplateService: debug
    org.penistrong.coupon.customer.feign.CalculationService: debug

feign:
  client:
    config:
      # 全局默认超时判定配置
      default:
        connectTimeout: 1000
        readTimeout: 5000
      # 针对特定服务配置
      coupon-template-service:
        connectTimeout: 1000
        readTimeout: 2000
